// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoAPI.Models;

#nullable disable

namespace ToDoAPI.Migrations
{
    [DbContext(typeof(PoliceAppDbContext))]
    [Migration("20230801054232_Mig2")]
    partial class Mig2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoAPI.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("Adi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KimlikNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("ToDoAPI.Models.Policys", b =>
                {
                    b.Property<int>("PolicyNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyNumber"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<double>("Prim")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TanzimTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VadeBaslangic")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VadeBitis")
                        .HasColumnType("datetime2");

                    b.HasKey("PolicyNumber");

                    b.HasIndex("PersonId");

                    b.HasIndex("ProductId");

                    b.ToTable("Policys");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Policys");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ToDoAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ToDoAPI.Models.Casco", b =>
                {
                    b.HasBaseType("ToDoAPI.Models.Policys");

                    b.Property<string>("CarBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarPlateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Casco");
                });

            modelBuilder.Entity("ToDoAPI.Models.Dask", b =>
                {
                    b.HasBaseType("ToDoAPI.Models.Policys");

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Il")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ilce")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Dask");
                });

            modelBuilder.Entity("ToDoAPI.Models.Health", b =>
                {
                    b.HasBaseType("ToDoAPI.Models.Policys");

                    b.Property<string>("HastaneAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SigortaNumarasi")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Health");
                });

            modelBuilder.Entity("ToDoAPI.Models.Traffic", b =>
                {
                    b.HasBaseType("ToDoAPI.Models.Policys");

                    b.Property<string>("PlakaIlKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlakaKodu")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Traffic");
                });

            modelBuilder.Entity("ToDoAPI.Models.Policys", b =>
                {
                    b.HasOne("ToDoAPI.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToDoAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
